{"version":3,"sources":["index.js"],"names":["API_HOST","process","APP_ENV","App","_useState","useState","_useState2","Object","_Users_Sarah_Projects_react_bike_weather_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","stations","setStations","_useState3","_useState4","at","setAt","_useState5","_useState6","kioskId","setKioskId","fetchData","_ref","_Users_Sarah_Projects_react_bike_weather_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_Sarah_Projects_react_bike_weather_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","url","response","wrap","_context","prev","next","concat","axios","get","headers","api-token","Content-Type","sent","data","stop","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","onChange","event","target","value","onClick","moment","format","weather","description","map","station","index","key","properties","name","bikesAvailable","addressStreet","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0OAKMA,SAAmC,eAAxBC,8CAAYC,QAA2B,4CACvD,gCACD,SAASC,IAAM,IAAAC,EACkBC,mBAAS,MAD3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACGI,EADHJ,EAAA,GAAAK,EAEMN,mBAAS,MAFfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEPE,EAFOD,EAAA,GAEHE,EAFGF,EAAA,GAAAG,EAGgBV,mBAAS,MAHzBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGPE,EAHOD,EAAA,GAGEE,EAHFF,EAAA,GAIRG,EAAS,eAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXL,EADW,GAAAM,OACHhC,EADG,aAAAgC,OACiBf,EAAU,IAAIA,EAAU,IAAK,IAD9C,OAAAe,OACuDnB,GADvDgB,EAAAE,KAAA,EAEME,IAAMC,IAC5BR,EACA,CACCS,QAAS,CACRC,YAAa,UACbC,eAAgB,sBAPF,OAEXV,EAFWE,EAAAS,KAYjB5B,EAAYiB,EAASY,MAZJ,wBAAAV,EAAAW,SAAAf,MAAH,yBAAAL,EAAAqB,MAAAC,KAAAC,YAAA,GAwBf,OACCC,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,OACfF,EAAArB,EAAAsB,cAAA,gCAEDD,EAAArB,EAAAsB,cAAA,WAEAD,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAAA,qBAEDD,EAAArB,EAAAsB,cAAA,SAAOC,UAAU,aAAaC,SAAU,SAAAC,GAAK,OAlB3BzB,EAkBuCyB,EAAMC,OAAOC,WAjBpEpC,EAAMS,GADS,IAACA,KAmBlBqB,EAAArB,EAAAsB,cAAA,WACCD,EAAArB,EAAAsB,cAAA,WAJA,SAODD,EAAArB,EAAAsB,cAAA,SAAOC,UAAU,aAAaC,SAAU,SAAAC,GAAK,OApB1BzB,EAoBuCyB,EAAMC,OAAOC,WAnBrEhC,EAAWK,GADK,IAACA,OAyBlBqB,EAAArB,EAAAsB,cAAA,WAEAD,EAAArB,EAAAsB,cAAA,UAAQC,UAAU,eAAeK,QAAShC,GAA1C,cAIAyB,EAAArB,EAAAsB,cAAA,YAIAD,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,MAAf,IAAsBrC,GAAY2C,IAAO3C,EAASI,IAAIwC,OAAO,QAC7DT,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,WAAf,IAA2BrC,GAAYA,EAAS6C,QAAQA,QAAQ,GAAGC,aACnEX,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,YACbrC,GACDA,EAASA,SAAS+C,IAAI,SAACC,EAASC,GAC/B,OACDd,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,UAAUa,IAAKD,GAC9Bd,EAAArB,EAAAsB,cAAA,qBAAaa,EAAQ,GACtBd,EAAArB,EAAAsB,cAAA,UAAKY,EAAQG,WAAWC,MACxBjB,EAAArB,EAAAsB,cAAA,OAAKC,UAAU,WACdF,EAAArB,EAAAsB,cAAA,6BAAqBY,EAAQG,WAAWE,gBACzClB,EAAArB,EAAAsB,cAAA,qBAAaY,EAAQG,WAAWG,qBAWjC,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOxB,EAAArB,EAAAsB,cAAC1C,EAAD,MAAS6D","file":"static/js/main.30326bee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './styles.css';\nconst API_HOST = process.env.APP_ENV === \"PRODUCTION\" ? \"https://bike-weather.herokuapp.com/api/v1\":\n\t\"http://localhost:3000/api/v1\"\nfunction App() {\n\tconst [stations, setStations] = useState(null);\n\tconst [at, setAt] = useState(null);\n\tconst [kioskId, setKioskId] = useState(null);\n\tconst fetchData = async () => {\n\t\tconst url =`${API_HOST}/stations${kioskId ? \"/\"+kioskId + \"?\": \"?\"}at=${at}`\n\t\tconst response = await axios.get(\n\t\t\turl,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t\"api-token\": \"dev-123\",\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\t\tsetStations(response.data);\n\t};\n\t\n\tconst setTime = (a) => {\n\t\tsetAt(a)\n\t}\n\tconst setKiosk = (a) => {\n\t\tsetKioskId(a)\n\t}\n\t\n\t\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t<h1>Bikes Availability</h1>\n\t\n\t<div>\n\t\n\t<div >\n\t<label>\n\tTime:\n<input className=\"text-input\" onChange={event => setTime(event.target.value)} />\n<br />\n\t<br />\n\t\n\tKiosk:\n<input className=\"text-input\" onChange={event => setKiosk(event.target.value)} />\n\n</label>\n\t</div>\n\t\n\t<br />\n\t\n\t<button className=\"fetch-button\" onClick={fetchData}>\n\t\tFetch Data\n\t</button>\n\t\n\t<br />\n\t</div>\n\t\n\t{/* Display data from API */}\n\t<div className=\"at\"> {stations && moment(stations.at).format('LLL')}</div>\n\t<div className=\"weather\"> {stations && stations.weather.weather[0].description}</div>\n\t<div className=\"stations\">\n\t\t{stations &&\n\t\tstations.stations.map((station, index) => {\n\t\t\treturn (\n\t\t<div className=\"station\" key={index}>\n\t\t<h3>Station {index + 1}</h3>\n\t<h2>{station.properties.name}</h2>\n\t<div className=\"details\">\n\t\t<p>Bikes Available: {station.properties.bikesAvailable}</p>\n\t<p>Address: {station.properties.addressStreet}</p>\n\t</div>\n\t</div>\n);\n})}\n</div>\n\t\n\t</div>\n);\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}